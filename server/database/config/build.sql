BEGIN;

DROP TABLE IF EXISTS 'Users', 'Projects', 'Sections', 'Tasks', 'User_Tasks', 'User_Projects', 'Activity' CASCADE;

CREATE TABLE 'Users' (
  id SERIAL PRIMARY KEY,
  username VARCHAR(255) NOT NULL,
  firstName VARCHAR(255),
  lastName VARCHAR(255),
  email VARCHAR(255) NOT NULL,
  phoneNumber VARCHAR(255),
  password VARCHAR(255) NOT NULL,
  birthDate DATE,
  bio VARCHAR(255),
);

CREATE TABLE 'Projects' (
  id SERIAL PRIMARY KEY,
  name VARCHAR(255) NOT NULL,
  description VARCHAR(255) NOT NULL,
);

CREATE TABLE 'Sections' (
  id SERIAL PRIMARY KEY,
  name VARCHAR(255) NOT NULL,
  color VARCHAR(255),
  projectId INTEGER NOT NULL,
  FOREIGN KEY (project_id) REFERENCES Projects(id) ON DELETE CASCADE
);

CREATE TABLE 'Tasks' (
  id SERIAL PRIMARY KEY,
  name VARCHAR(255) NOT NULL,
  description VARCHAR(255),
  priority VARCHAR(255),
  endDate DATE,
  status VARCHAR(255),
  sectionId INTEGER NOT NULL,
  FOREIGN KEY (section_id) REFERENCES Sections(id) ON DELETE CASCADE
);

CREATE TABLE 'User_Tasks' (
  id SERIAL PRIMARY KEY,
  userId INTEGER NOT NULL,
  taskId INTEGER NOT NULL,
  FOREIGN KEY (userId) REFERENCES Users(id) ON DELETE CASCADE,
  FOREIGN KEY (taskId) REFERENCES Tasks(id) ON DELETE CASCADE
);

CREATE TABLE 'User_Projects' (
  id SERIAL PRIMARY KEY,
  userId INTEGER NOT NULL,
  projectId INTEGER NOT NULL,
  role VARCHAR(255) NOT NULL,
  FOREIGN KEY (userId) REFERENCES Users(id) ON DELETE CASCADE,
  FOREIGN KEY (projectId) REFERENCES Projects(id) ON DELETE CASCADE
);

CREATE TABLE 'Activity' (
  id SERIAL PRIMARY KEY,
  userId INTEGER NOT NULL,
  projectId INTEGER NOT NULL,
  sectionId INTEGER NOT NULL,
  taskId INTEGER NOT NULL,
  createdAt TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  action VARCHAR(255) NOT NULL,
  FOREIGN KEY (userId) REFERENCES Users(id) ON DELETE CASCADE,
  FOREIGN KEY (projectId) REFERENCES Projects(id) ON DELETE CASCADE,
  FOREIGN KEY (sectionId) REFERENCES Sections(id) ON DELETE CASCADE,
  FOREIGN KEY (taskId) REFERENCES Tasks(id) ON DELETE CASCADE
);

COMMIT;